/* ベースコンテナ */
.container {
  width: 100%;
  max-width: 100%;
  height: 100vh; /* フッターなしで画面いっぱいに表示 */
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: var(--foreground);
}

/* エディタページレイアウト - 画面全体を覆う固定位置のエディタ */
.editorPage {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  background-color: var(--background);
}

/* エディタのメインコンテナ */
.editorContainer {
  width: 100%;
  max-width: 800px;
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  background-color: var(--surface);
  padding: 1rem;
}

/* エディタ本体のスタイル */
.editorContent {
  flex: 1;
  height: calc(100% - 2rem); /* パディングを考慮 */
  overflow-y: auto;
  padding: 1rem;
  line-height: 1.4;
  font-size: 1.1rem;

  /* スクロールバーをカスタマイズ - より控えめに */
  scrollbar-width: thin; /* Firefox用 */
  scrollbar-color: rgba(var(--foreground-rgb), 0.3) transparent; /* Firefox用 */
}

/* WebKit（Chrome, Safari等）用のスクロールバーカスタマイズ */
.editorContent::-webkit-scrollbar {
  width: 6px;
}

.editorContent::-webkit-scrollbar-track {
  background: transparent;
}

.editorContent::-webkit-scrollbar-thumb {
  background-color: rgba(var(--foreground-rgb), 0.3);
  border-radius: 3px;
}

.editorContent::-webkit-scrollbar-thumb:hover {
  background-color: rgba(var(--foreground-rgb), 0.5);
}

.editorContent :global(.ProseMirror) {
  height: 100%;
  outline: none;
  caret-color: var(--foreground);
}

.editorContent :global(.ProseMirror p) {
  margin: 0 0 0.7em 0;
}

.editorContent :global(.ProseMirror h1),
.editorContent :global(.ProseMirror h2),
.editorContent :global(.ProseMirror h3) {
  margin: 1.2em 0 0.4em 0;
  line-height: 1.2;
}

.editorContent :global(.ProseMirror h1) {
  font-size: 1.8em;
}

.editorContent :global(.ProseMirror h2) {
  font-size: 1.5em;
}

.editorContent :global(.ProseMirror h3) {
  font-size: 1.3em;
}

/* リストスタイルの追加 */
.editorContent :global(.ProseMirror ul),
.editorContent :global(.ProseMirror ol) {
  padding-left: 1.5rem;
  margin: 0.7em 0;
}

.editorContent :global(.ProseMirror li) {
  margin-bottom: 0.3em;
  position: relative;
}

.editorContent :global(.ProseMirror li p) {
  margin: 0;
}

/* プレースホルダーのスタイル */
.editorContent :global(.ProseMirror p.is-editor-empty:first-child::before) {
  content: attr(data-placeholder);
  float: left;
  color: var(--foreground);
  opacity: 0.4;
  pointer-events: none;
  height: 0;
}

/* フローティングコントロール */
.floatingControls {
  position: fixed;
  top: 1rem;
  right: 1rem;
  display: flex;
  gap: 0.5rem;
  background-color: rgba(var(--surface-rgb), 0.8);
  padding: 0.5rem;
  border-radius: 8px;
  backdrop-filter: blur(5px);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  z-index: 10;
}

/* 文字数制限警告 */
.limitWarning {
  position: fixed;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(244, 63, 94, 0.9);
  color: white;
  padding: 0.75rem 1rem;
  border-radius: 6px;
  font-weight: bold;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
  z-index: 100;
  max-width: 90%;
  text-align: center;
  animation: slideDown 0.3s ease-out forwards;
}

@keyframes slideDown {
  from {
    transform: translate(-50%, -100%);
    opacity: 0;
  }
  to {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}

/* レスポンシブデザイン */
@media (max-width: 768px) {
  .container {
    height: 100vh; /* フッターなしで画面いっぱいに */
  }

  .editorContainer {
    padding: 0.5rem;
  }

  .floatingControls {
    top: 0.5rem;
    right: 0.5rem;
  }
}

/* スマホサイズ */
@media (max-width: 480px) {
  .container {
    height: 100vh; /* フッターなしで画面いっぱいに */
  }

  .floatingControls {
    width: auto;
    justify-content: flex-end;
    max-width: calc(100% - 1rem);
  }
}
