.editor {
  background-color: var(--surface);
  border-radius: 8px;
  overflow: hidden;
  width: 100%;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.toolbar {
  display: flex;
  padding: 10px 12px;
  background-color: var(--secondary);
  border-bottom: 1px solid var(--divider);
  gap: 10px;
  flex-wrap: wrap;
  align-items: center;
}

.toolbarGroup {
  display: flex;
  gap: 6px;
  align-items: center;
}

.toolbarDivider {
  width: 1px;
  height: 24px;
  background-color: var(--divider);
  margin: 0 4px;
}

.toolbarButton,
.winButton,
.loseButton,
.ratingButton {
  background-color: var(--surface);
  border: 1px solid transparent;
  border-radius: 4px;
  padding: 6px 10px;
  cursor: pointer;
  font-size: 14px;
  color: var(--foreground);
  transition: all 0.2s ease;
  min-height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  touch-action: manipulation; /* タッチデバイス用の最適化 */
}

.toolbarButton:hover,
.ratingButton:hover {
  background-color: var(--hover);
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.toolbarButton.isActive {
  background-color: var(--key);
  color: var(--foreground);
}

/* 勝敗ボタン */
.winButton {
  background-color: rgba(74, 222, 128, 0.2);
  border: 1px solid var(--result-win);
  color: var(--result-win);
  font-weight: bold;
  padding: 6px 14px;
}

.loseButton {
  background-color: rgba(96, 165, 250, 0.2);
  border: 1px solid var(--result-lose);
  color: var(--result-lose);
  font-weight: bold;
  padding: 6px 14px;
}

.winButton:hover {
  background-color: rgba(74, 222, 128, 0.3);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.loseButton:hover {
  background-color: rgba(96, 165, 250, 0.3);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* 評価ボタン */
.ratingButton {
  background-color: rgba(241, 196, 15, 0.1);
  border: 1px solid rgba(241, 196, 15, 0.3);
  color: #f1c40f;
  padding: 6px 10px;
  font-size: 0.85rem;
  letter-spacing: 1px;
}

.ratingButton:hover {
  background-color: rgba(241, 196, 15, 0.2);
}

.editorContent {
  flex: 1;
  min-height: 300px;
  background-color: var(--surface);
}

.editorContent :global(.ProseMirror) {
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.5;
  color: var(--foreground);
  min-height: 300px;
  caret-color: var(--foreground);
  outline: none;
  padding: 16px;
}

.editorContent :global(.ProseMirror) p {
  margin: 0 0 0.5em 0;
}

.editorContent :global(.ProseMirror) h1,
.editorContent :global(.ProseMirror) h2,
.editorContent :global(.ProseMirror) h3 {
  line-height: 1.3;
  margin: 1em 0 0.5em;
  color: var(--foreground);
}

.editorContent :global(.ProseMirror) p:last-child {
  margin-bottom: 0;
}

.editorContent :global(.ProseMirror-focused) {
  outline: none;
}

/* レスポンシブデザイン - 中小デバイス向け */
@media (max-width: 768px) {
  .toolbar {
    padding: 8px;
    flex-wrap: wrap;
    gap: 8px;
  }

  .toolbarGroup {
    margin-bottom: 6px;
    gap: 4px; /* 小さなスクリーンではボタン間のスペースを縮小 */
  }

  .toolbarDivider {
    display: none; /* モバイルでは区切り線を非表示 */
  }

  /* モバイルでもタップしやすいボタンサイズを確保 */
  .toolbarButton,
  .winButton,
  .loseButton,
  .ratingButton {
    min-height: 36px;
    min-width: 36px;
    padding: 4px 10px;
  }

  /* 評価ボタンをよりコンパクトに */
  .ratingButton {
    min-width: 0;
    padding: 4px 6px;
    font-size: 0.8rem;
  }

  .editorContent :global(.ProseMirror) {
    padding: 12px;
    font-size: 0.95rem;
    min-height: 200px;
  }
}

/* 小型デバイス向け（電話など） */
@media (max-width: 480px) {
  .toolbar {
    flex-direction: column;
    align-items: flex-start;
    padding: 8px 6px;
  }

  .toolbarGroup {
    width: 100%;
    justify-content: flex-start;
    margin-bottom: 6px;
    flex-wrap: wrap;
  }

  /* Winとloseは常に表示 */
  .toolbarGroup:first-child {
    justify-content: space-between;
  }

  /* 評価ボタン群は横スクロール可能にする */
  .toolbarGroup:nth-child(2) {
    overflow-x: auto;
    padding-bottom: 4px;
    -webkit-overflow-scrolling: touch;
    display: flex;
    flex-wrap: nowrap;
    width: 100%;
  }

  .toolbarButton,
  .winButton,
  .loseButton {
    flex-grow: 1;
    padding: 6px 0;
  }

  .editorContent :global(.ProseMirror) {
    padding: 10px;
    font-size: 0.9rem;
  }

  /* 編集エリアの高さを調整 */
  .editorContent,
  .editorContent :global(.ProseMirror) {
    min-height: 180px;
  }
}
